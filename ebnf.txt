Programs and Blocks

pgm = pgmHeading pgmDeclarations codeBlock "." .
pgmHeading = program pgmIdentifier ";" .
pgmDeclarations = { pgmDeclaration } .
pgmDeclaration = varDeclaration | typeDeclaration | procDeclaration .
procDeclaration = procHeading ( forward | ( varDeclarations codeBlock ) ) ";" .
procHeading = procedure procIdentifier defParameters ";" .
varDeclarations = { varDeclaration } .
varDeclaration = var declaration ";" .
typeDeclaration = type oneTypeDeclaration { oneTypeDeclaration } .
oneTypeDeclaration = typeIdentifier "=" ( recordType | arrayType | ( "^" typeIdentifier ) ) ";" .


Statements, Procedures and Functions

codeBlock = begin statements end .
statements = { statement }
statement = simpleStatement | ifStatement | whileStatement | procCall .
simpleStatement = variable ":=" ( expression | procCall ) ";" .
ifStatement = if expression then codeBlock [ else codeBlock ] ";" .
whileStatement = while expression do codeBlock ";" .
procCall = procIdentifier callParameters ";" .
defParameters = [ "(" declaration { ";" declaration } ")" ]
declaration = varIdentifier ":" type .
callParameters = [ "(" expression { ";" expression } ")" ]


Expressions Procedures and Functions

expression = simpleExpression [ relOperator simpleExpression ] .
simpleExpression = term { addOperator term } .
term = factor { multOperator factor } .
factor = variable | ( [ sign ] longint ) | string | "(" expression ")" | not factor .


Types

type = simpleType | typeIdentifier .
simpleType = longint | string | char | boolean | text .
recordType = record declaration { ";" declaration } end .
arrayType = array of typeIdentifier .


Variables

variable = varExtIdentifier { varModifier } .
varModifier = [ "^" ] "." varExtIdentifier .
varExtIdentifier = varIdentifier { "[" expression "]" } .
-------
variable = varIdentifier { varModifier } .
varModifier = "^" | "." varIdentifier | "[" expression "]".


Identifiers

pgmIdentifier = identifier .
constIdentifier = identifier .
varIdentifier = identifier .
typeIdentifier = identifier .
procIdentifier = identifier .
funcIdentifier = identifier .
identifier = letter { letter | digit } .


Low Level Definitions

sign = "+" | "-" .
longint = digit { digit } .
string = "'" stringCharacter { stringCharacter } "'" .
stringCharacter = any-character-except-quote | "''" .
relOperator = "=" | "<>" | "<" | "<=" | ">" | ">=" .
addOperator = "+" | "-" | or .
multOperator = "*" | div | and .
letter = "A" | ... | "Z" | "a" | ... | "z" .
digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" .
